name: CI

on:
  push:
    branches: [master, develop, rc, feature/7.0.0]
  pull_request:
    branches: [master, develop, rc]

jobs:
  build_reqs:
    name: build (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
      IBLRIG_REQS: iblrig_requirements_frozen.txt
      IBLLIB_REQS: ibllib_requirements_frozen.txt
    strategy:
      matrix:
        os: [ "windows-latest" ]
        python-version: ["3.8"]
    steps:
      - name: Clone iblrig repo
        uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: iblrig

      - name: Flake8
        shell: bash -l {0}
        run: |
          pip install flake8 --quiet
          python -m flake8

      - name: Commands
        shell: bash -l {0}
        run: |
          conda activate base
          python --version
          pip install setuptools wheel packaging colorlog --quiet
          python install.py --reinstall-response y --config-response y --bonsai-response y --ONE-response n
          conda activate ibllib
          python -c "from one.api import ONE; ONE(base_url='https://test.alyx.internationalbrainlab.org', username='test_user', password='TapetesBloc18', silent=True)"
          conda activate iblrig
          python -m unittest discover

      - name: Generate requirements_frozen.txt
        shell: bash -l {0}
        run: |
          conda activate iblrig
          pip freeze > "$IBLRIG_REQS"
          conda activate ibllib
          pip freeze > "$IBLLIB_REQS"

      - name: Store frozen requirements as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: requirements_frozen
          path: |
            iblrig_requirements_frozen.txt
            ibllib_requirements_frozen.txt